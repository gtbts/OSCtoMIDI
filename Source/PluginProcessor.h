/*
 ==============================================================================
 
 This file was auto-generated by the Introjucer!
 
 It contains the basic framework code for a JUCE plugin processor.
 
 ==============================================================================
 */

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED


#include "../JuceLibraryCode/JuceHeader.h"

//==============================================================================
/**
 */
class OsctoMidiAudioProcessor  : public AudioProcessor,
public OSCReceiver,
public OSCReceiver::Listener<juce::OSCReceiver::MessageLoopCallback>
{
public:
    //==============================================================================
    OsctoMidiAudioProcessor();
    ~OsctoMidiAudioProcessor();
    
    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;
    
    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;
    
    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;
    
    //==============================================================================
    const String getName() const override;
    
    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool silenceInProducesSilenceOut() const override;
    double getTailLengthSeconds() const override;
    
    //==============================================================================
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const String getProgramName (int index) override;
    void changeProgramName (int index, const String& newName) override;
    
    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;
    
    //==============================================================================
    void setOSCConnection (uint16_t port);
    void showConnectionErrorMessage (const String& messageText);
    void oscMessageReceived (const OSCMessage& message) override;
    void oscBundleReceived (const OSCBundle& bundle) override;
    
    
    //==============================================================================
    bool cvMute[4] = {};
    uint16_t cvValue[4] = {};
    uint8_t currentScale = Chromatic;
    uint16_t currentResolution = Bit12Reso;
    
private:
    
    OSCReceiver receiver;
    
    enum parameters
    {
        CV1 = 0,
        CV2 = 1,
        CV3 = 2,
        CV4 = 3,
        Scale = 4,
        BitRes = 5,
        
        Bit10 = 1,
        Bit12 = 2,
        Bit14 = 3,
        Bit16 = 4,
        
        Bit10Reso = 1023,
        Bit12Reso = 4095,
        Bit14Reso = 16383,
        Bit16Reso = 65535,
        
        Chromatic = 1,
        Major = 2,
        M7 = 3,
        Min7 = 4,
        Dorian = 5,
        Minor = 6,
        Fifth = 7,
        Whole = 8
    };
    
    AudioParameterBool* paramCV1Mute;
    AudioParameterBool* paramCV2Mute;
    AudioParameterBool* paramCV3Mute;
    AudioParameterBool* paramCV4Mute;
    AudioParameterInt* paramScale;
    AudioParameterInt* paramBit;
    
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (OsctoMidiAudioProcessor)
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
